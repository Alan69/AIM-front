# Multi-stage build for React
FROM node:18-alpine as build

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies with legacy peer deps to avoid conflicts
RUN npm install --legacy-peer-deps

# Install missing dependencies that might be needed
RUN npm install axios @babel/plugin-proposal-private-property-in-object --legacy-peer-deps

# Copy source code
COPY . .

# Copy production environment file
COPY env.production .env.production

# Set environment for production build
ENV NODE_ENV=production
ENV REACT_APP_ENVIRONMENT=production
ENV REACT_APP_API_URL=https://aimmagic.com

# Build the React app
RUN npm run build

# Production stage - nginx to serve static files
FROM nginx:alpine

# Copy built app from build stage
COPY --from=build /app/build /usr/share/nginx/html

# Copy custom nginx config if needed
# COPY nginx.conf /etc/nginx/nginx.conf

# Create nginx config for React SPA
RUN echo 'server { \
    listen 80; \
    location / { \
        root /usr/share/nginx/html; \
        index index.html index.htm; \
        try_files $uri $uri/ /index.html; \
    } \
    location /static/ { \
        root /usr/share/nginx/html; \
        expires 1y; \
        add_header Cache-Control "public, immutable"; \
    } \
}' > /etc/nginx/conf.d/default.conf

# Expose port 80
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"] 